using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Runtime.Remoting.Metadata.W3cXsd2001;
using System.Threading.Tasks;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Google.Api.Gax.ResourceNames;
using Google.Cloud.Firestore;
using static Google.Cloud.Language.V1.PartOfSpeech.Types;

namespace mallspacium_web.ShopOwner
{
    public partial class AddProductPage : System.Web.UI.Page
    {
        FirestoreDb database;
        protected void Page_Load(object sender, EventArgs e)
        {
            string path = AppDomain.CurrentDomain.BaseDirectory + @"mallspaceium.json";
            Environment.SetEnvironmentVariable("GOOGLE_APPLICATION_CREDENTIALS", path);

            database = FirestoreDb.Create("mallspaceium");

            shopNameTextbox.Enabled = false;
            getShopName();
        }

        protected void addButton_Click(object sender, EventArgs e)
        {
            AddProduct();
        }

        public async void AddProduct()
        {
            //auto generated unique id
            Random random = new Random();
            int randomIDNumber = random.Next(100000, 999999);
            string productID = "PROD" + randomIDNumber.ToString();

            //Create an instance of Bitmap from the uploaded file using the FileUpload control
            Bitmap image = new Bitmap(imageFileUpload.PostedFile.InputStream);
            MemoryStream stream = new MemoryStream();
            image.Save(stream, System.Drawing.Imaging.ImageFormat.Jpeg);
            byte[] bytes = stream.ToArray();

            //Convert the Bitmap image to a Base64 string
            string base64String = Convert.ToBase64String(bytes);

            DocumentReference doc = database.Collection("Users").Document((string)Application.Get("usernameget")).Collection("Product").Document(nameTextbox.Text);
            Dictionary<string, object> data1 = new Dictionary<string, object>()
            {
                { "prodShopName", shopNameTextbox.Text },
                { "prodId", productID},
                { "prodName", nameTextbox.Text},
                { "prodDesc", descriptionTextbox.Text},
                { "prodColor", colorTextBox.Text },
                { "prodSize", sizeTextBox.Text },
                { "prodPrice", "₱" + priceTextbox.Text},
                { "prodType", typeTextbox.Text},
                { "prodTag", tagDropDownList.SelectedValue},
                { "prodAvailability", availablityDropDownList.SelectedValue },
                { "prodImage", base64String}
            };

            if (nameTextBoxValidator.IsValid && descriptionTextboxValidator.IsValid && colorRequiredFieldValidator.IsValid && sizeRequiredFieldValidator.IsValid && priceTextboxValidator.IsValid && tagRequiredFieldValidator.IsValid && imageFileUploadValidator.IsValid && shopNameRequiredFieldValidator.IsValid && typeRequiredFieldValidator.IsValid)
            {
                await doc.SetAsync(data1);

                bool hasShopName = true;

                DateTime currentDate = DateTime.Now;
                string date = currentDate.ToString("yyyy-MM-dd HH:mm:ss");

                // Specify the name of the document using a variable or a string literal
                string documentName = "The " + shopNameTextbox.Text + " has posted a new product " + nameTextbox.Text;

                Dictionary<string, object> data = new Dictionary<string, object>();
                data.Add("notifDetail", "Shop " + shopNameTextbox.Text + " has posted a new product " + nameTextbox.Text + ".");
                data.Add("notifImage", "");
                data.Add("notifDate", date);
                data.Add("isProduct", hasShopName);
                data.Add("shopName", shopNameTextbox.Text);
                data.Add("prodName", nameTextbox.Text);
                data.Add("prodTag", tagDropDownList.SelectedValue);
                data.Add("prodImage", base64String);

                CollectionReference docRef = database.Collection("Users").Document((string)Application["usernameget"]).Collection("ShopperFavorites");

                docRef.GetSnapshotAsync().ContinueWith(async task =>
                {
                    if (task.IsCompleted && task.Result != null)
                    {
                        List<string> favoredEmails = new List<string>();
                        foreach (DocumentSnapshot favoriteDocument in task.Result.Documents)
                        {
                            string favoredEmail = favoriteDocument.GetValue<string>("email");
                            if (favoredEmail != null)
                            {
                                favoredEmails.Add(favoredEmail);
                            }
                            else
                            {
                                // Display a message
                                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertScript", "alert('Successfully Added a New Product!');", true);

                                // Redirect to another page after a delay
                                string url = "MyShopProductsPage.aspx";
                                ScriptManager.RegisterStartupScript(this, this.GetType(), "redirectScript", "setTimeout(function(){ window.location.href = '" + url + "'; }, 500);", true);
                            }
                        }

                        Query query = database.Collection("Users").WhereEqualTo("userRole", "Shopper").WhereIn("email", favoredEmails);

                        var querySnapshot = await query.GetSnapshotAsync();
                        if (querySnapshot != null)
                        {
                            foreach (DocumentSnapshot document in querySnapshot.Documents)
                            {
                                await database.Collection("Users")
                                    .Document(document.Id)
                                    .Collection("Notification")
                                    .Document(documentName)
                                    .SetAsync(data)
                                    .ContinueWith(async notificationTask =>
                                    {
                                        try
                                        {
                                            await notificationTask;
                                            Console.WriteLine("Successfully added the product to the shopper's notification");
                                        }
                                        catch (Exception ex)
                                        {
                                            Console.WriteLine("Error adding the sale & discount to the shopper's notification: " + ex);
                                        }
                                    });
                            }
                        }
                        else
                        {
                            Console.WriteLine("Error fetching shoppers: " + task.Exception);
                        }

                        CollectionReference usersCollection = database.Collection("Users");
                        Query query1 = usersCollection
                            .WhereEqualTo("userRole", "Shopper")
                            .WhereIn("email", favoredEmails);

                        QuerySnapshot querySnapshot1 = await query1.GetSnapshotAsync();
                        if (querySnapshot1 != null)
                        {
                            foreach (DocumentSnapshot document in querySnapshot1.Documents)
                            {
                                // Retrieve the user token from the document
                                string token = document.GetValue<string>("token");

                                string deviceToken = token;
                                // Build the notification payload
                                string title = "New Product from Favorite Shop";
                                string body = shopNameTextbox.Text + " added a new product " + nameTextbox.Text + ".";

                                // Send the notification using FCM
                                FcmNotification fcm = new FcmNotification();
                                fcm.SendNotification(deviceToken, title, body);
                            }
                        }
                    }
                });

                // Display a message
                ScriptManager.RegisterStartupScript(this, this.GetType(), "alertScript", "alert('Successfully Added a New Product!');", true);

                // Redirect to another page after a delay
                string url2 = "MyShopProductsPage.aspx";
                ScriptManager.RegisterStartupScript(this, this.GetType(), "redirectScript", "setTimeout(function(){ window.location.href = '" + url2 + "'; }, 500);", true);
            }
        }


        public async void getShopName()
        {
            if (!IsPostBack)
            {
                Query query = database.Collection("Users").WhereEqualTo("email", (string)Application.Get("usernameget"));
                QuerySnapshot snap = await query.GetSnapshotAsync();

                // Loop through the documents in the query snapshot
                foreach (DocumentSnapshot documentSnapshot in snap.Documents)
                {
                    // Retrieve the data from the document
                    string shopName = documentSnapshot.GetValue<string>("shopName");

                    shopNameTextbox.Text = shopName;
                }
            }
        }
    }
}